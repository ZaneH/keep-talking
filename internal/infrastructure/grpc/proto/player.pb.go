// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/player.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	mi := &file_proto_player_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{0}
}

type CreateGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	mi := &file_proto_player_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGameResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type PlayerInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	BombId    string                 `protobuf:"bytes,2,opt,name=bomb_id,json=bombId,proto3" json:"bomb_id,omitempty"`
	ModuleId  string                 `protobuf:"bytes,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// Types that are valid to be assigned to Input:
	//
	//	*PlayerInput_WiresInput
	//	*PlayerInput_PasswordInput
	//	*PlayerInput_BigButtonInput
	//	*PlayerInput_SimonInput
	//	*PlayerInput_KeypadInput
	//	*PlayerInput_WhosOnFirstInput
	//	*PlayerInput_MemoryInput
	//	*PlayerInput_MorseInput
	Input         isPlayerInput_Input `protobuf_oneof:"input"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	mi := &file_proto_player_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerInput) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PlayerInput) GetBombId() string {
	if x != nil {
		return x.BombId
	}
	return ""
}

func (x *PlayerInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *PlayerInput) GetInput() isPlayerInput_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *PlayerInput) GetWiresInput() *WiresInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_WiresInput); ok {
			return x.WiresInput
		}
	}
	return nil
}

func (x *PlayerInput) GetPasswordInput() *PasswordInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_PasswordInput); ok {
			return x.PasswordInput
		}
	}
	return nil
}

func (x *PlayerInput) GetBigButtonInput() *BigButtonInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_BigButtonInput); ok {
			return x.BigButtonInput
		}
	}
	return nil
}

func (x *PlayerInput) GetSimonInput() *SimonInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_SimonInput); ok {
			return x.SimonInput
		}
	}
	return nil
}

func (x *PlayerInput) GetKeypadInput() *KeypadInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_KeypadInput); ok {
			return x.KeypadInput
		}
	}
	return nil
}

func (x *PlayerInput) GetWhosOnFirstInput() *WhosOnFirstInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_WhosOnFirstInput); ok {
			return x.WhosOnFirstInput
		}
	}
	return nil
}

func (x *PlayerInput) GetMemoryInput() *MemoryInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_MemoryInput); ok {
			return x.MemoryInput
		}
	}
	return nil
}

func (x *PlayerInput) GetMorseInput() *MorseInput {
	if x != nil {
		if x, ok := x.Input.(*PlayerInput_MorseInput); ok {
			return x.MorseInput
		}
	}
	return nil
}

type isPlayerInput_Input interface {
	isPlayerInput_Input()
}

type PlayerInput_WiresInput struct {
	WiresInput *WiresInput `protobuf:"bytes,10,opt,name=wires_input,json=wiresInput,proto3,oneof"`
}

type PlayerInput_PasswordInput struct {
	PasswordInput *PasswordInput `protobuf:"bytes,11,opt,name=password_input,json=passwordInput,proto3,oneof"`
}

type PlayerInput_BigButtonInput struct {
	BigButtonInput *BigButtonInput `protobuf:"bytes,12,opt,name=big_button_input,json=bigButtonInput,proto3,oneof"`
}

type PlayerInput_SimonInput struct {
	SimonInput *SimonInput `protobuf:"bytes,13,opt,name=simon_input,json=simonInput,proto3,oneof"`
}

type PlayerInput_KeypadInput struct {
	KeypadInput *KeypadInput `protobuf:"bytes,14,opt,name=keypad_input,json=keypadInput,proto3,oneof"`
}

type PlayerInput_WhosOnFirstInput struct {
	WhosOnFirstInput *WhosOnFirstInput `protobuf:"bytes,15,opt,name=whos_on_first_input,json=whosOnFirstInput,proto3,oneof"`
}

type PlayerInput_MemoryInput struct {
	MemoryInput *MemoryInput `protobuf:"bytes,16,opt,name=memory_input,json=memoryInput,proto3,oneof"`
}

type PlayerInput_MorseInput struct {
	MorseInput *MorseInput `protobuf:"bytes,17,opt,name=morse_input,json=morseInput,proto3,oneof"`
}

func (*PlayerInput_WiresInput) isPlayerInput_Input() {}

func (*PlayerInput_PasswordInput) isPlayerInput_Input() {}

func (*PlayerInput_BigButtonInput) isPlayerInput_Input() {}

func (*PlayerInput_SimonInput) isPlayerInput_Input() {}

func (*PlayerInput_KeypadInput) isPlayerInput_Input() {}

func (*PlayerInput_WhosOnFirstInput) isPlayerInput_Input() {}

func (*PlayerInput_MemoryInput) isPlayerInput_Input() {}

func (*PlayerInput_MorseInput) isPlayerInput_Input() {}

type PlayerInputResult struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	ModuleId string                 `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	Strike   bool                   `protobuf:"varint,2,opt,name=strike,proto3" json:"strike,omitempty"`
	Solved   bool                   `protobuf:"varint,3,opt,name=solved,proto3" json:"solved,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*PlayerInputResult_BigButtonInputResult
	//	*PlayerInputResult_SimonInputResult
	//	*PlayerInputResult_PasswordInputResult
	//	*PlayerInputResult_KeypadInputResult
	//	*PlayerInputResult_WhosOnFirstInputResult
	//	*PlayerInputResult_MemoryInputResult
	//	*PlayerInputResult_MorseInputResult
	Result        isPlayerInputResult_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInputResult) Reset() {
	*x = PlayerInputResult{}
	mi := &file_proto_player_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInputResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInputResult) ProtoMessage() {}

func (x *PlayerInputResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInputResult.ProtoReflect.Descriptor instead.
func (*PlayerInputResult) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerInputResult) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *PlayerInputResult) GetStrike() bool {
	if x != nil {
		return x.Strike
	}
	return false
}

func (x *PlayerInputResult) GetSolved() bool {
	if x != nil {
		return x.Solved
	}
	return false
}

func (x *PlayerInputResult) GetResult() isPlayerInputResult_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PlayerInputResult) GetBigButtonInputResult() *BigButtonInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_BigButtonInputResult); ok {
			return x.BigButtonInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetSimonInputResult() *SimonInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_SimonInputResult); ok {
			return x.SimonInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetPasswordInputResult() *PasswordInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_PasswordInputResult); ok {
			return x.PasswordInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetKeypadInputResult() *KeypadInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_KeypadInputResult); ok {
			return x.KeypadInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetWhosOnFirstInputResult() *WhosOnFirstInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_WhosOnFirstInputResult); ok {
			return x.WhosOnFirstInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetMemoryInputResult() *MemoryInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_MemoryInputResult); ok {
			return x.MemoryInputResult
		}
	}
	return nil
}

func (x *PlayerInputResult) GetMorseInputResult() *MorseInputResult {
	if x != nil {
		if x, ok := x.Result.(*PlayerInputResult_MorseInputResult); ok {
			return x.MorseInputResult
		}
	}
	return nil
}

type isPlayerInputResult_Result interface {
	isPlayerInputResult_Result()
}

type PlayerInputResult_BigButtonInputResult struct {
	BigButtonInputResult *BigButtonInputResult `protobuf:"bytes,10,opt,name=big_button_input_result,json=bigButtonInputResult,proto3,oneof"`
}

type PlayerInputResult_SimonInputResult struct {
	SimonInputResult *SimonInputResult `protobuf:"bytes,11,opt,name=simon_input_result,json=simonInputResult,proto3,oneof"`
}

type PlayerInputResult_PasswordInputResult struct {
	PasswordInputResult *PasswordInputResult `protobuf:"bytes,12,opt,name=password_input_result,json=passwordInputResult,proto3,oneof"`
}

type PlayerInputResult_KeypadInputResult struct {
	KeypadInputResult *KeypadInputResult `protobuf:"bytes,13,opt,name=keypad_input_result,json=keypadInputResult,proto3,oneof"`
}

type PlayerInputResult_WhosOnFirstInputResult struct {
	WhosOnFirstInputResult *WhosOnFirstInputResult `protobuf:"bytes,14,opt,name=whos_on_first_input_result,json=whosOnFirstInputResult,proto3,oneof"`
}

type PlayerInputResult_MemoryInputResult struct {
	MemoryInputResult *MemoryInputResult `protobuf:"bytes,15,opt,name=memory_input_result,json=memoryInputResult,proto3,oneof"`
}

type PlayerInputResult_MorseInputResult struct {
	MorseInputResult *MorseInputResult `protobuf:"bytes,16,opt,name=morse_input_result,json=morseInputResult,proto3,oneof"`
}

func (*PlayerInputResult_BigButtonInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_SimonInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_PasswordInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_KeypadInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_WhosOnFirstInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_MemoryInputResult) isPlayerInputResult_Result() {}

func (*PlayerInputResult_MorseInputResult) isPlayerInputResult_Result() {}

var File_proto_player_proto protoreflect.FileDescriptor

const file_proto_player_proto_rawDesc = "" +
	"\n" +
	"\x12proto/player.proto\x12\x06player\x1a\x18proto/wires_module.proto\x1a\x1bproto/password_module.proto\x1a\x1dproto/big_button_module.proto\x1a\x18proto/simon_module.proto\x1a\x19proto/keypad_module.proto\x1a proto/whos_on_first_module.proto\x1a\x19proto/memory_module.proto\x1a\x18proto/morse_module.proto\"\x13\n" +
	"\x11CreateGameRequest\"3\n" +
	"\x12CreateGameResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\xdb\x04\n" +
	"\vPlayerInput\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\abomb_id\x18\x02 \x01(\tR\x06bombId\x12\x1b\n" +
	"\tmodule_id\x18\x03 \x01(\tR\bmoduleId\x126\n" +
	"\vwires_input\x18\n" +
	" \x01(\v2\x13.modules.WiresInputH\x00R\n" +
	"wiresInput\x12?\n" +
	"\x0epassword_input\x18\v \x01(\v2\x16.modules.PasswordInputH\x00R\rpasswordInput\x12C\n" +
	"\x10big_button_input\x18\f \x01(\v2\x17.modules.BigButtonInputH\x00R\x0ebigButtonInput\x126\n" +
	"\vsimon_input\x18\r \x01(\v2\x13.modules.SimonInputH\x00R\n" +
	"simonInput\x129\n" +
	"\fkeypad_input\x18\x0e \x01(\v2\x14.modules.KeypadInputH\x00R\vkeypadInput\x12J\n" +
	"\x13whos_on_first_input\x18\x0f \x01(\v2\x19.modules.WhosOnFirstInputH\x00R\x10whosOnFirstInput\x129\n" +
	"\fmemory_input\x18\x10 \x01(\v2\x14.modules.MemoryInputH\x00R\vmemoryInput\x126\n" +
	"\vmorse_input\x18\x11 \x01(\v2\x13.modules.MorseInputH\x00R\n" +
	"morseInputB\a\n" +
	"\x05input\"\xa7\x05\n" +
	"\x11PlayerInputResult\x12\x1b\n" +
	"\tmodule_id\x18\x01 \x01(\tR\bmoduleId\x12\x16\n" +
	"\x06strike\x18\x02 \x01(\bR\x06strike\x12\x16\n" +
	"\x06solved\x18\x03 \x01(\bR\x06solved\x12V\n" +
	"\x17big_button_input_result\x18\n" +
	" \x01(\v2\x1d.modules.BigButtonInputResultH\x00R\x14bigButtonInputResult\x12I\n" +
	"\x12simon_input_result\x18\v \x01(\v2\x19.modules.SimonInputResultH\x00R\x10simonInputResult\x12R\n" +
	"\x15password_input_result\x18\f \x01(\v2\x1c.modules.PasswordInputResultH\x00R\x13passwordInputResult\x12L\n" +
	"\x13keypad_input_result\x18\r \x01(\v2\x1a.modules.KeypadInputResultH\x00R\x11keypadInputResult\x12]\n" +
	"\x1awhos_on_first_input_result\x18\x0e \x01(\v2\x1f.modules.WhosOnFirstInputResultH\x00R\x16whosOnFirstInputResult\x12L\n" +
	"\x13memory_input_result\x18\x0f \x01(\v2\x1a.modules.MemoryInputResultH\x00R\x11memoryInputResult\x12I\n" +
	"\x12morse_input_result\x18\x10 \x01(\v2\x19.modules.MorseInputResultH\x00R\x10morseInputResultB\b\n" +
	"\x06resultB\tZ\a./protob\x06proto3"

var (
	file_proto_player_proto_rawDescOnce sync.Once
	file_proto_player_proto_rawDescData []byte
)

func file_proto_player_proto_rawDescGZIP() []byte {
	file_proto_player_proto_rawDescOnce.Do(func() {
		file_proto_player_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_player_proto_rawDesc), len(file_proto_player_proto_rawDesc)))
	})
	return file_proto_player_proto_rawDescData
}

var file_proto_player_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_player_proto_goTypes = []any{
	(*CreateGameRequest)(nil),      // 0: player.CreateGameRequest
	(*CreateGameResponse)(nil),     // 1: player.CreateGameResponse
	(*PlayerInput)(nil),            // 2: player.PlayerInput
	(*PlayerInputResult)(nil),      // 3: player.PlayerInputResult
	(*WiresInput)(nil),             // 4: modules.WiresInput
	(*PasswordInput)(nil),          // 5: modules.PasswordInput
	(*BigButtonInput)(nil),         // 6: modules.BigButtonInput
	(*SimonInput)(nil),             // 7: modules.SimonInput
	(*KeypadInput)(nil),            // 8: modules.KeypadInput
	(*WhosOnFirstInput)(nil),       // 9: modules.WhosOnFirstInput
	(*MemoryInput)(nil),            // 10: modules.MemoryInput
	(*MorseInput)(nil),             // 11: modules.MorseInput
	(*BigButtonInputResult)(nil),   // 12: modules.BigButtonInputResult
	(*SimonInputResult)(nil),       // 13: modules.SimonInputResult
	(*PasswordInputResult)(nil),    // 14: modules.PasswordInputResult
	(*KeypadInputResult)(nil),      // 15: modules.KeypadInputResult
	(*WhosOnFirstInputResult)(nil), // 16: modules.WhosOnFirstInputResult
	(*MemoryInputResult)(nil),      // 17: modules.MemoryInputResult
	(*MorseInputResult)(nil),       // 18: modules.MorseInputResult
}
var file_proto_player_proto_depIdxs = []int32{
	4,  // 0: player.PlayerInput.wires_input:type_name -> modules.WiresInput
	5,  // 1: player.PlayerInput.password_input:type_name -> modules.PasswordInput
	6,  // 2: player.PlayerInput.big_button_input:type_name -> modules.BigButtonInput
	7,  // 3: player.PlayerInput.simon_input:type_name -> modules.SimonInput
	8,  // 4: player.PlayerInput.keypad_input:type_name -> modules.KeypadInput
	9,  // 5: player.PlayerInput.whos_on_first_input:type_name -> modules.WhosOnFirstInput
	10, // 6: player.PlayerInput.memory_input:type_name -> modules.MemoryInput
	11, // 7: player.PlayerInput.morse_input:type_name -> modules.MorseInput
	12, // 8: player.PlayerInputResult.big_button_input_result:type_name -> modules.BigButtonInputResult
	13, // 9: player.PlayerInputResult.simon_input_result:type_name -> modules.SimonInputResult
	14, // 10: player.PlayerInputResult.password_input_result:type_name -> modules.PasswordInputResult
	15, // 11: player.PlayerInputResult.keypad_input_result:type_name -> modules.KeypadInputResult
	16, // 12: player.PlayerInputResult.whos_on_first_input_result:type_name -> modules.WhosOnFirstInputResult
	17, // 13: player.PlayerInputResult.memory_input_result:type_name -> modules.MemoryInputResult
	18, // 14: player.PlayerInputResult.morse_input_result:type_name -> modules.MorseInputResult
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_player_proto_init() }
func file_proto_player_proto_init() {
	if File_proto_player_proto != nil {
		return
	}
	file_proto_wires_module_proto_init()
	file_proto_password_module_proto_init()
	file_proto_big_button_module_proto_init()
	file_proto_simon_module_proto_init()
	file_proto_keypad_module_proto_init()
	file_proto_whos_on_first_module_proto_init()
	file_proto_memory_module_proto_init()
	file_proto_morse_module_proto_init()
	file_proto_player_proto_msgTypes[2].OneofWrappers = []any{
		(*PlayerInput_WiresInput)(nil),
		(*PlayerInput_PasswordInput)(nil),
		(*PlayerInput_BigButtonInput)(nil),
		(*PlayerInput_SimonInput)(nil),
		(*PlayerInput_KeypadInput)(nil),
		(*PlayerInput_WhosOnFirstInput)(nil),
		(*PlayerInput_MemoryInput)(nil),
		(*PlayerInput_MorseInput)(nil),
	}
	file_proto_player_proto_msgTypes[3].OneofWrappers = []any{
		(*PlayerInputResult_BigButtonInputResult)(nil),
		(*PlayerInputResult_SimonInputResult)(nil),
		(*PlayerInputResult_PasswordInputResult)(nil),
		(*PlayerInputResult_KeypadInputResult)(nil),
		(*PlayerInputResult_WhosOnFirstInputResult)(nil),
		(*PlayerInputResult_MemoryInputResult)(nil),
		(*PlayerInputResult_MorseInputResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_player_proto_rawDesc), len(file_proto_player_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_player_proto_goTypes,
		DependencyIndexes: file_proto_player_proto_depIdxs,
		MessageInfos:      file_proto_player_proto_msgTypes,
	}.Build()
	File_proto_player_proto = out.File
	file_proto_player_proto_goTypes = nil
	file_proto_player_proto_depIdxs = nil
}
