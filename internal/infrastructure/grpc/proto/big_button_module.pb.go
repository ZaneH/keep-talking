// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/big_button_module.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BigButtonInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PressType PressType              `protobuf:"varint,1,opt,name=press_type,json=pressType,proto3,enum=common.PressType" json:"press_type,omitempty"`
	// Let the user specify the release time as Unix timestamp to avoid issues with latency.
	// 0 indicates no relevance to the current press_type. Could be abused to solve faster.
	ReleaseTimestamp int64 `protobuf:"varint,2,opt,name=release_timestamp,json=releaseTimestamp,proto3" json:"release_timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BigButtonInput) Reset() {
	*x = BigButtonInput{}
	mi := &file_proto_big_button_module_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigButtonInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigButtonInput) ProtoMessage() {}

func (x *BigButtonInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_big_button_module_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigButtonInput.ProtoReflect.Descriptor instead.
func (*BigButtonInput) Descriptor() ([]byte, []int) {
	return file_proto_big_button_module_proto_rawDescGZIP(), []int{0}
}

func (x *BigButtonInput) GetPressType() PressType {
	if x != nil {
		return x.PressType
	}
	return PressType_TAP
}

func (x *BigButtonInput) GetReleaseTimestamp() int64 {
	if x != nil {
		return x.ReleaseTimestamp
	}
	return 0
}

type BigButtonInputResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StripColor    Color                  `protobuf:"varint,1,opt,name=strip_color,json=stripColor,proto3,enum=common.Color" json:"strip_color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigButtonInputResult) Reset() {
	*x = BigButtonInputResult{}
	mi := &file_proto_big_button_module_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigButtonInputResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigButtonInputResult) ProtoMessage() {}

func (x *BigButtonInputResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_big_button_module_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigButtonInputResult.ProtoReflect.Descriptor instead.
func (*BigButtonInputResult) Descriptor() ([]byte, []int) {
	return file_proto_big_button_module_proto_rawDescGZIP(), []int{1}
}

func (x *BigButtonInputResult) GetStripColor() Color {
	if x != nil {
		return x.StripColor
	}
	return Color_RED
}

type BigButtonState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ButtonColor   Color                  `protobuf:"varint,1,opt,name=button_color,json=buttonColor,proto3,enum=common.Color" json:"button_color,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigButtonState) Reset() {
	*x = BigButtonState{}
	mi := &file_proto_big_button_module_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigButtonState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigButtonState) ProtoMessage() {}

func (x *BigButtonState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_big_button_module_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigButtonState.ProtoReflect.Descriptor instead.
func (*BigButtonState) Descriptor() ([]byte, []int) {
	return file_proto_big_button_module_proto_rawDescGZIP(), []int{2}
}

func (x *BigButtonState) GetButtonColor() Color {
	if x != nil {
		return x.ButtonColor
	}
	return Color_RED
}

func (x *BigButtonState) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

var File_proto_big_button_module_proto protoreflect.FileDescriptor

const file_proto_big_button_module_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/big_button_module.proto\x12\amodules\x1a\x12proto/common.proto\"o\n" +
	"\x0eBigButtonInput\x120\n" +
	"\n" +
	"press_type\x18\x01 \x01(\x0e2\x11.common.PressTypeR\tpressType\x12+\n" +
	"\x11release_timestamp\x18\x02 \x01(\x03R\x10releaseTimestamp\"F\n" +
	"\x14BigButtonInputResult\x12.\n" +
	"\vstrip_color\x18\x01 \x01(\x0e2\r.common.ColorR\n" +
	"stripColor\"X\n" +
	"\x0eBigButtonState\x120\n" +
	"\fbutton_color\x18\x01 \x01(\x0e2\r.common.ColorR\vbuttonColor\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05labelB\tZ\a./protob\x06proto3"

var (
	file_proto_big_button_module_proto_rawDescOnce sync.Once
	file_proto_big_button_module_proto_rawDescData []byte
)

func file_proto_big_button_module_proto_rawDescGZIP() []byte {
	file_proto_big_button_module_proto_rawDescOnce.Do(func() {
		file_proto_big_button_module_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_big_button_module_proto_rawDesc), len(file_proto_big_button_module_proto_rawDesc)))
	})
	return file_proto_big_button_module_proto_rawDescData
}

var file_proto_big_button_module_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_big_button_module_proto_goTypes = []any{
	(*BigButtonInput)(nil),       // 0: modules.BigButtonInput
	(*BigButtonInputResult)(nil), // 1: modules.BigButtonInputResult
	(*BigButtonState)(nil),       // 2: modules.BigButtonState
	(PressType)(0),               // 3: common.PressType
	(Color)(0),                   // 4: common.Color
}
var file_proto_big_button_module_proto_depIdxs = []int32{
	3, // 0: modules.BigButtonInput.press_type:type_name -> common.PressType
	4, // 1: modules.BigButtonInputResult.strip_color:type_name -> common.Color
	4, // 2: modules.BigButtonState.button_color:type_name -> common.Color
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_big_button_module_proto_init() }
func file_proto_big_button_module_proto_init() {
	if File_proto_big_button_module_proto != nil {
		return
	}
	file_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_big_button_module_proto_rawDesc), len(file_proto_big_button_module_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_big_button_module_proto_goTypes,
		DependencyIndexes: file_proto_big_button_module_proto_depIdxs,
		MessageInfos:      file_proto_big_button_module_proto_msgTypes,
	}.Build()
	File_proto_big_button_module_proto = out.File
	file_proto_big_button_module_proto_goTypes = nil
	file_proto_big_button_module_proto_depIdxs = nil
}
