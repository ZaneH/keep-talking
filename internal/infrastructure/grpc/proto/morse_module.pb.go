// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/morse_module.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MorseFrequencyChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Direction     IncrementDecrement     `protobuf:"varint,1,opt,name=direction,proto3,enum=common.IncrementDecrement" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MorseFrequencyChange) Reset() {
	*x = MorseFrequencyChange{}
	mi := &file_proto_morse_module_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MorseFrequencyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MorseFrequencyChange) ProtoMessage() {}

func (x *MorseFrequencyChange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_morse_module_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MorseFrequencyChange.ProtoReflect.Descriptor instead.
func (*MorseFrequencyChange) Descriptor() ([]byte, []int) {
	return file_proto_morse_module_proto_rawDescGZIP(), []int{0}
}

func (x *MorseFrequencyChange) GetDirection() IncrementDecrement {
	if x != nil {
		return x.Direction
	}
	return IncrementDecrement_INCREMENT
}

type MorseTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MorseTx) Reset() {
	*x = MorseTx{}
	mi := &file_proto_morse_module_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MorseTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MorseTx) ProtoMessage() {}

func (x *MorseTx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_morse_module_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MorseTx.ProtoReflect.Descriptor instead.
func (*MorseTx) Descriptor() ([]byte, []int) {
	return file_proto_morse_module_proto_rawDescGZIP(), []int{1}
}

type MorseInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Input:
	//
	//	*MorseInput_FrequencyChange
	//	*MorseInput_Tx
	Input         isMorseInput_Input `protobuf_oneof:"input"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MorseInput) Reset() {
	*x = MorseInput{}
	mi := &file_proto_morse_module_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MorseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MorseInput) ProtoMessage() {}

func (x *MorseInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_morse_module_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MorseInput.ProtoReflect.Descriptor instead.
func (*MorseInput) Descriptor() ([]byte, []int) {
	return file_proto_morse_module_proto_rawDescGZIP(), []int{2}
}

func (x *MorseInput) GetInput() isMorseInput_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *MorseInput) GetFrequencyChange() *MorseFrequencyChange {
	if x != nil {
		if x, ok := x.Input.(*MorseInput_FrequencyChange); ok {
			return x.FrequencyChange
		}
	}
	return nil
}

func (x *MorseInput) GetTx() *MorseTx {
	if x != nil {
		if x, ok := x.Input.(*MorseInput_Tx); ok {
			return x.Tx
		}
	}
	return nil
}

type isMorseInput_Input interface {
	isMorseInput_Input()
}

type MorseInput_FrequencyChange struct {
	FrequencyChange *MorseFrequencyChange `protobuf:"bytes,1,opt,name=frequency_change,json=frequencyChange,proto3,oneof"`
}

type MorseInput_Tx struct {
	Tx *MorseTx `protobuf:"bytes,2,opt,name=tx,proto3,oneof"`
}

func (*MorseInput_FrequencyChange) isMorseInput_Input() {}

func (*MorseInput_Tx) isMorseInput_Input() {}

type MorseInputResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MorseState    *MorseState            `protobuf:"bytes,1,opt,name=morse_state,json=morseState,proto3" json:"morse_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MorseInputResult) Reset() {
	*x = MorseInputResult{}
	mi := &file_proto_morse_module_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MorseInputResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MorseInputResult) ProtoMessage() {}

func (x *MorseInputResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_morse_module_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MorseInputResult.ProtoReflect.Descriptor instead.
func (*MorseInputResult) Descriptor() ([]byte, []int) {
	return file_proto_morse_module_proto_rawDescGZIP(), []int{3}
}

func (x *MorseInputResult) GetMorseState() *MorseState {
	if x != nil {
		return x.MorseState
	}
	return nil
}

type MorseState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The frequency that is currently selected
	DisplayedFrequency float32 `protobuf:"fixed32,1,opt,name=displayed_frequency,json=displayedFrequency,proto3" json:"displayed_frequency,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MorseState) Reset() {
	*x = MorseState{}
	mi := &file_proto_morse_module_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MorseState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MorseState) ProtoMessage() {}

func (x *MorseState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_morse_module_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MorseState.ProtoReflect.Descriptor instead.
func (*MorseState) Descriptor() ([]byte, []int) {
	return file_proto_morse_module_proto_rawDescGZIP(), []int{4}
}

func (x *MorseState) GetDisplayedFrequency() float32 {
	if x != nil {
		return x.DisplayedFrequency
	}
	return 0
}

var File_proto_morse_module_proto protoreflect.FileDescriptor

const file_proto_morse_module_proto_rawDesc = "" +
	"\n" +
	"\x18proto/morse_module.proto\x12\amodules\x1a\x12proto/common.proto\"P\n" +
	"\x14MorseFrequencyChange\x128\n" +
	"\tdirection\x18\x01 \x01(\x0e2\x1a.common.IncrementDecrementR\tdirection\"\t\n" +
	"\aMorseTx\"\x85\x01\n" +
	"\n" +
	"MorseInput\x12J\n" +
	"\x10frequency_change\x18\x01 \x01(\v2\x1d.modules.MorseFrequencyChangeH\x00R\x0ffrequencyChange\x12\"\n" +
	"\x02tx\x18\x02 \x01(\v2\x10.modules.MorseTxH\x00R\x02txB\a\n" +
	"\x05input\"H\n" +
	"\x10MorseInputResult\x124\n" +
	"\vmorse_state\x18\x01 \x01(\v2\x13.modules.MorseStateR\n" +
	"morseState\"=\n" +
	"\n" +
	"MorseState\x12/\n" +
	"\x13displayed_frequency\x18\x01 \x01(\x02R\x12displayedFrequencyB\tZ\a./protob\x06proto3"

var (
	file_proto_morse_module_proto_rawDescOnce sync.Once
	file_proto_morse_module_proto_rawDescData []byte
)

func file_proto_morse_module_proto_rawDescGZIP() []byte {
	file_proto_morse_module_proto_rawDescOnce.Do(func() {
		file_proto_morse_module_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_morse_module_proto_rawDesc), len(file_proto_morse_module_proto_rawDesc)))
	})
	return file_proto_morse_module_proto_rawDescData
}

var file_proto_morse_module_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_morse_module_proto_goTypes = []any{
	(*MorseFrequencyChange)(nil), // 0: modules.MorseFrequencyChange
	(*MorseTx)(nil),              // 1: modules.MorseTx
	(*MorseInput)(nil),           // 2: modules.MorseInput
	(*MorseInputResult)(nil),     // 3: modules.MorseInputResult
	(*MorseState)(nil),           // 4: modules.MorseState
	(IncrementDecrement)(0),      // 5: common.IncrementDecrement
}
var file_proto_morse_module_proto_depIdxs = []int32{
	5, // 0: modules.MorseFrequencyChange.direction:type_name -> common.IncrementDecrement
	0, // 1: modules.MorseInput.frequency_change:type_name -> modules.MorseFrequencyChange
	1, // 2: modules.MorseInput.tx:type_name -> modules.MorseTx
	4, // 3: modules.MorseInputResult.morse_state:type_name -> modules.MorseState
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_morse_module_proto_init() }
func file_proto_morse_module_proto_init() {
	if File_proto_morse_module_proto != nil {
		return
	}
	file_proto_common_proto_init()
	file_proto_morse_module_proto_msgTypes[2].OneofWrappers = []any{
		(*MorseInput_FrequencyChange)(nil),
		(*MorseInput_Tx)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_morse_module_proto_rawDesc), len(file_proto_morse_module_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_morse_module_proto_goTypes,
		DependencyIndexes: file_proto_morse_module_proto_depIdxs,
		MessageInfos:      file_proto_morse_module_proto_msgTypes,
	}.Build()
	File_proto_morse_module_proto = out.File
	file_proto_morse_module_proto_goTypes = nil
	file_proto_morse_module_proto_depIdxs = nil
}
