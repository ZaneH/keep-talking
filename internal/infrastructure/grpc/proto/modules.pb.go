// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.15.8
// source: proto/modules.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Module_ModuleType int32

const (
	Module_UNKNOWN      Module_ModuleType = 0
	Module_SIMPLE_WIRES Module_ModuleType = 1
	Module_PASSWORD     Module_ModuleType = 2
	Module_BIG_BUTTON   Module_ModuleType = 3
	Module_SIMON_SAYS   Module_ModuleType = 4
)

// Enum value maps for Module_ModuleType.
var (
	Module_ModuleType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SIMPLE_WIRES",
		2: "PASSWORD",
		3: "BIG_BUTTON",
		4: "SIMON_SAYS",
	}
	Module_ModuleType_value = map[string]int32{
		"UNKNOWN":      0,
		"SIMPLE_WIRES": 1,
		"PASSWORD":     2,
		"BIG_BUTTON":   3,
		"SIMON_SAYS":   4,
	}
)

func (x Module_ModuleType) Enum() *Module_ModuleType {
	p := new(Module_ModuleType)
	*p = x
	return p
}

func (x Module_ModuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Module_ModuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_modules_proto_enumTypes[0].Descriptor()
}

func (Module_ModuleType) Type() protoreflect.EnumType {
	return &file_proto_modules_proto_enumTypes[0]
}

func (x Module_ModuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Module_ModuleType.Descriptor instead.
func (Module_ModuleType) EnumDescriptor() ([]byte, []int) {
	return file_proto_modules_proto_rawDescGZIP(), []int{1, 0}
}

type ModulePosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Face          int32                  `protobuf:"varint,1,opt,name=face,proto3" json:"face,omitempty"`
	Row           int32                  `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Col           int32                  `protobuf:"varint,3,opt,name=col,proto3" json:"col,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePosition) Reset() {
	*x = ModulePosition{}
	mi := &file_proto_modules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePosition) ProtoMessage() {}

func (x *ModulePosition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_modules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePosition.ProtoReflect.Descriptor instead.
func (*ModulePosition) Descriptor() ([]byte, []int) {
	return file_proto_modules_proto_rawDescGZIP(), []int{0}
}

func (x *ModulePosition) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *ModulePosition) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ModulePosition) GetCol() int32 {
	if x != nil {
		return x.Col
	}
	return 0
}

type Module struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type  Module_ModuleType      `protobuf:"varint,2,opt,name=type,proto3,enum=modules.Module_ModuleType" json:"type,omitempty"`
	// ModulePosition position = 3;
	Solved bool `protobuf:"varint,4,opt,name=solved,proto3" json:"solved,omitempty"`
	// Types that are valid to be assigned to State:
	//
	//	*Module_SimpleWires
	//	*Module_BigButton
	State         isModule_State `protobuf_oneof:"state"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_proto_modules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_proto_modules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_proto_modules_proto_rawDescGZIP(), []int{1}
}

func (x *Module) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Module) GetType() Module_ModuleType {
	if x != nil {
		return x.Type
	}
	return Module_UNKNOWN
}

func (x *Module) GetSolved() bool {
	if x != nil {
		return x.Solved
	}
	return false
}

func (x *Module) GetState() isModule_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Module) GetSimpleWires() *SimpleWiresState {
	if x != nil {
		if x, ok := x.State.(*Module_SimpleWires); ok {
			return x.SimpleWires
		}
	}
	return nil
}

func (x *Module) GetBigButton() *BigButtonState {
	if x != nil {
		if x, ok := x.State.(*Module_BigButton); ok {
			return x.BigButton
		}
	}
	return nil
}

type isModule_State interface {
	isModule_State()
}

type Module_SimpleWires struct {
	SimpleWires *SimpleWiresState `protobuf:"bytes,5,opt,name=simple_wires,json=simpleWires,proto3,oneof"`
}

type Module_BigButton struct {
	// PasswordState password = 6;
	BigButton *BigButtonState `protobuf:"bytes,7,opt,name=big_button,json=bigButton,proto3,oneof"` // SimonSaysState simon_says = 8;
}

func (*Module_SimpleWires) isModule_State() {}

func (*Module_BigButton) isModule_State() {}

var File_proto_modules_proto protoreflect.FileDescriptor

const file_proto_modules_proto_rawDesc = "" +
	"\n" +
	"\x13proto/modules.proto\x12\amodules\x1a\x1fproto/simple_wires_module.proto\x1a\x1dproto/big_button_module.proto\"H\n" +
	"\x0eModulePosition\x12\x12\n" +
	"\x04face\x18\x01 \x01(\x05R\x04face\x12\x10\n" +
	"\x03row\x18\x02 \x01(\x05R\x03row\x12\x10\n" +
	"\x03col\x18\x03 \x01(\x05R\x03col\"\xbe\x02\n" +
	"\x06Module\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1a.modules.Module.ModuleTypeR\x04type\x12\x16\n" +
	"\x06solved\x18\x04 \x01(\bR\x06solved\x12>\n" +
	"\fsimple_wires\x18\x05 \x01(\v2\x19.modules.SimpleWiresStateH\x00R\vsimpleWires\x128\n" +
	"\n" +
	"big_button\x18\a \x01(\v2\x17.modules.BigButtonStateH\x00R\tbigButton\"Y\n" +
	"\n" +
	"ModuleType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x10\n" +
	"\fSIMPLE_WIRES\x10\x01\x12\f\n" +
	"\bPASSWORD\x10\x02\x12\x0e\n" +
	"\n" +
	"BIG_BUTTON\x10\x03\x12\x0e\n" +
	"\n" +
	"SIMON_SAYS\x10\x04B\a\n" +
	"\x05stateB\tZ\a./protob\x06proto3"

var (
	file_proto_modules_proto_rawDescOnce sync.Once
	file_proto_modules_proto_rawDescData []byte
)

func file_proto_modules_proto_rawDescGZIP() []byte {
	file_proto_modules_proto_rawDescOnce.Do(func() {
		file_proto_modules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_modules_proto_rawDesc), len(file_proto_modules_proto_rawDesc)))
	})
	return file_proto_modules_proto_rawDescData
}

var file_proto_modules_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_modules_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_modules_proto_goTypes = []any{
	(Module_ModuleType)(0),   // 0: modules.Module.ModuleType
	(*ModulePosition)(nil),   // 1: modules.ModulePosition
	(*Module)(nil),           // 2: modules.Module
	(*SimpleWiresState)(nil), // 3: modules.SimpleWiresState
	(*BigButtonState)(nil),   // 4: modules.BigButtonState
}
var file_proto_modules_proto_depIdxs = []int32{
	0, // 0: modules.Module.type:type_name -> modules.Module.ModuleType
	3, // 1: modules.Module.simple_wires:type_name -> modules.SimpleWiresState
	4, // 2: modules.Module.big_button:type_name -> modules.BigButtonState
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_modules_proto_init() }
func file_proto_modules_proto_init() {
	if File_proto_modules_proto != nil {
		return
	}
	file_proto_simple_wires_module_proto_init()
	file_proto_big_button_module_proto_init()
	file_proto_modules_proto_msgTypes[1].OneofWrappers = []any{
		(*Module_SimpleWires)(nil),
		(*Module_BigButton)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_modules_proto_rawDesc), len(file_proto_modules_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_modules_proto_goTypes,
		DependencyIndexes: file_proto_modules_proto_depIdxs,
		EnumInfos:         file_proto_modules_proto_enumTypes,
		MessageInfos:      file_proto_modules_proto_msgTypes,
	}.Build()
	File_proto_modules_proto = out.File
	file_proto_modules_proto_goTypes = nil
	file_proto_modules_proto_depIdxs = nil
}
